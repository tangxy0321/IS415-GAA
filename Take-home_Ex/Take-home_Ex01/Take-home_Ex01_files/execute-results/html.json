{
  "hash": "3273e1b3e81b8d54ca4cc3cd87d0fb10",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 1: Application of Spatial Point Pattern Analysis on Grab Hailing Service in Singapore\"\nformat: \n  html: \n    code-fold: true\n    code-summary: \"Show the code\"\n    code-overflow: wrap\n    code-line-numbers: true\n    code-copy: hover\nexecute: \n  eval: true\n  echo: true\nauthor: \"Tang Xin Yi\"\ndate: \"17 Jan 2024\"\n---\n\n\n# 1 Problem context\n\nThis exercise is looking into discovering insights relevant to the geographical and spatial distribution of Grab hailing service locations in Singapore.\n\nIn this exercise, the following packages are used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, tmap, spatstat, raster, maptools, spNetwork, classInt, viridis, arrow, lubridate)\n```\n:::\n\n\n# 2 Data\n\n## 2.1 Background of the datasets used\n\nThe following datasets are used in this analysis exercise.\n\n-   `GrabPosisi`: Aspatial data\n\n-   `RoadMap`: from OpenStreetMap\n\n-   `Master Plan 2019 Subzone Boundary (No Sea)`  from Data.gov.sg\n\n## 2.2 Import data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrab <- read_parquet(\"../../data/aspatial/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\nroadmap <- st_read(dsn = \"../../data/geospatial/malaysia-singapore-brunei-latest-free.shp\",\n                   layer = \"gis_osm_traffic_free_1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `gis_osm_traffic_free_1' from data source \n  `/Users/tangtang/Desktop/IS415 Geospatial Analytics and Applications/practice/IS415-GAA/data/geospatial/malaysia-singapore-brunei-latest-free.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 73927 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 99.6723 ymin: 0.9689892 xmax: 118.6113 ymax: 6.882957\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\nmp19 <- st_read(\"../../data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `MasterPlan2019SubzoneBoundaryNoSeaGEOJSON' from data source \n  `/Users/tangtang/Desktop/IS415 Geospatial Analytics and Applications/practice/IS415-GAA/data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\nFrom below, `grab$pingtimestamp` is not in the correct data type (it is in int class)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(grab)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n  trj_id driving_mode osname  pingtimestamp rawlat rawlng speed bearing accuracy\n  <chr>  <chr>        <chr>           <int>  <dbl>  <dbl> <dbl>   <int>    <dbl>\n1 70014  car          android    1554943236   1.34   104.  18.9     248      3.9\n2 73573  car          android    1555582623   1.32   104.  17.7      44      4  \n3 75567  car          android    1555141026   1.33   104.  14.0      34      3.9\n4 1410   car          android    1555731693   1.26   104.  13.0     181      4  \n5 4354   car          android    1555584497   1.28   104.  14.8      93      3.9\n6 32630  car          android    1555395258   1.30   104.  23.2      73      3.9\n```\n:::\n\n```{.r .cell-code}\ngrab$pingtimestamp = as_datetime(grab$pingtimestamp)\n```\n:::\n\nNow the `pingtimestamp` is in the correct data type `POSIXct` which represents datetime in tibble\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(grab)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n  trj_id driving_mode osname  pingtimestamp       rawlat rawlng speed bearing\n  <chr>  <chr>        <chr>   <dttm>               <dbl>  <dbl> <dbl>   <int>\n1 70014  car          android 2019-04-11 00:40:36   1.34   104.  18.9     248\n2 73573  car          android 2019-04-18 10:17:03   1.32   104.  17.7      44\n3 75567  car          android 2019-04-13 07:37:06   1.33   104.  14.0      34\n4 1410   car          android 2019-04-20 03:41:33   1.26   104.  13.0     181\n5 4354   car          android 2019-04-18 10:48:17   1.28   104.  14.8      93\n6 32630  car          android 2019-04-16 06:14:18   1.30   104.  23.2      73\n# ℹ 1 more variable: accuracy <dbl>\n```\n:::\n:::\n\nThe tibble data.frame is using coordinate system `WGS 84`, but we want to use the data in `SVY21`\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mp19)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmp19 <- st_set_crs(mp19, 3414)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: st_crs<- : replacing crs does not reproject data; use st_transform for\nthat\n```\n:::\n\n```{.r .cell-code}\nhead(mp19)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XYZ\nBounding box:  xmin: 103.8013 ymin: 1.274155 xmax: 103.8532 ymax: 1.286517\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n   Name\n1 kml_1\n2 kml_2\n3 kml_3\n4 kml_4\n5 kml_5\n6 kml_6\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Description\n1     <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>12</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>DEPOT ROAD</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>BMSZ12</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>N</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>BUKIT MERAH</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>BM</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>C22DED671DE2A940</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n2     <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>2</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>BUKIT MERAH</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>BMSZ02</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>N</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>BUKIT MERAH</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>BM</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>085EF219A5A1AEAD</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n3            <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>3</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>CHINATOWN</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>OTSZ03</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>Y</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>OUTRAM</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>OT</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>EF2B9A91AF49E025</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n4       <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>4</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>PHILLIP</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>DTSZ04</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>Y</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>DOWNTOWN CORE</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>DT</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>615D4EDDEF809F8E</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n5 <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>5</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>RAFFLES PLACE</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>DTSZ05</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>Y</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>DOWNTOWN CORE</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>DT</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>72107B11807074F4</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n6         <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>4</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>CHINA SQUARE</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>OTSZ04</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>Y</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>OUTRAM</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>OT</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>B609DF5587626C8F</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n                        geometry\n1 MULTIPOLYGON Z (((103.8145 ...\n2 MULTIPOLYGON Z (((103.8221 ...\n3 MULTIPOLYGON Z (((103.8438 ...\n4 MULTIPOLYGON Z (((103.8496 ...\n5 MULTIPOLYGON Z (((103.8525 ...\n6 MULTIPOLYGON Z (((103.8486 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(roadmap)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6 features and 4 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 103.8429 ymin: 1.295444 xmax: 103.9785 ymax: 1.334678\nGeodetic CRS:  WGS 84\n    osm_id code            fclass name                  geometry\n1 25451918 5206 motorway_junction <NA> POINT (103.9739 1.327573)\n2 25455287 5206 motorway_junction <NA>  POINT (103.874 1.295445)\n3 25455292 5206 motorway_junction <NA> POINT (103.9085 1.301013)\n4 25455304 5206 motorway_junction <NA> POINT (103.9785 1.334677)\n5 26778790 5201   traffic_signals <NA>   POINT (103.85 1.301522)\n6 26778799 5201   traffic_signals <NA> POINT (103.8429 1.300042)\n```\n:::\n\n```{.r .cell-code}\nst_crs(roadmap)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n:::\n:::\n\n`roadmap` has a similar problem as `mp19`, the coordinate system needs to be changed to `SVY 21`\n\n::: {.cell}\n\n```{.r .cell-code}\nroadmap <- st_set_crs(roadmap, 3414)\nhead(roadmap)\n```\n:::\n\n\n## 2.3 Prepare required Geographical data layers\n\nThis exercise needs the following geographical data layers\n\n1. Grab taxi location points either by origins or destinations\n\n2. Road layer within Singapore excluding outer islands\n\n3. Singapore boundary layer excluding outer islands\n\n### 2.3.1 Get Grab taxi origin and destination layer\n\nGet the origin tibble data.frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrip_origin <- grab %>% \n  # group by trip id\n  group_by(trj_id) %>% \n  # sort: ascending by default\n  arrange(pingtimestamp, .by_group = FALSE) %>% \n  # get 1st row\n  filter(row_number()==1) %>% \n  mutate(weekday = wday(pingtimestamp,\n                        label = TRUE,\n                        abbr = TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n```\n:::\n\n\nGet the destination tibble data.frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrip_dest <- grab %>% \n  group_by(trj_id) %>% \n  arrange(desc(pingtimestamp), .by_group = FALSE) %>% \n  filter(row_number()==1) %>% \n  mutate(weekday = wday(pingtimestamp,\n                        label = TRUE,\n                        abbr = TRUE),\n         end_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n```\n:::\n\n\nThe extracted data layers are written into `rds` files for easier reference later.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(trip_origin, \"../../data/rds/trip_origin.rds\")\nwrite_rds(trip_dest, \"../../data/rds/trip_dest.rds\")\n```\n:::\n\n\n### 2.3.2 Get Road layer within Singapore\n\n### 2.3.3 Ger Singapore boundary layer\n\n\n# 3 KDE\n\n# 4 NKDE",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}